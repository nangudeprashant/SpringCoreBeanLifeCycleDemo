<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">
	<context:component-scan
		base-package="com.javaLive.beans" />
	<!--
	The values of lazy-init can be true and false. If lazy-init is true, then
	that bean will be initialized when a request is made to bean. This bean
	will not be initialized when the spring container is initialized and if
	lazy-init is false then the bean will be initialized with the spring
	container initialization.
	-->
	<bean lazy-init="true" id="book" class="com.javaLive.beans.Book"
		init-method="myPostConstruct" destroy-method="myPreDestroy">
		<property name="bookName" value="JavaLive. Java at its best." />
	</bean>
	<bean lazy-init="true" id="publisher"
		class="com.javaLive.beans.Publisher">
		<property name="name" value="JavaLive.com" />
	</bean>
	<bean
		class="com.javaLive.SpringCoreBeanLifeCycleDemo.MyBeanPostProcessor" />

</beans>